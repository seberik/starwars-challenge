{"version":3,"sources":["loader.svg","components/Button/index.js","components/SearchField/index.js","components/SearchForm/index.js","components/Title/index.js","components/ListItem/index.js","api/client.js","context/api.js","hooks/request.js","components/ContentLoader/index.js","components/ErrorMessage/index.js","components/Movies/index.js","components/SearchResult/index.js","feature/Search/index.js","App.js","index.js"],"names":["module","exports","Button","props","loading","children","className","height","src","loader","alt","defaultProps","undefined","SearchField","type","placeholder","name","SearchForm","onSubmit","initialValues","query","Title","ListItem","noMargin","selected","attributes","classnames","APIClient","config","this","accept","baseURL","cache","url","requestURL","URL","fetch","href","then","response","json","catch","person","Promise","all","films","map","film","result","sort","a","b","Date","release_date","results","homeworld","species","specie","id","people","APIContext","React","createContext","client","APIContextProvider","Provider","value","CONSTANTS","initialState","error","requestReducer","state","action","request","requestError","requestSuccess","useRequest","promiseCreator","options","useReducer","dispatch","useEffect","skip","variables","ContentLoader","ErrorMessage","Movies","useContext","useCallback","getMovies","movies","movie","key","title","style","flexGrow","opening_crawl","substring","items","SearchResult","useState","selectedPerson","setSelectedPerson","onSelect","length","item","isSelected","Fragment","role","tabIndex","onClick","onKeyPress","e","join","population","Search","setQuery","searchPeople","values","App","ReactDOM","render","document","getElementById"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,oC,8SCerCC,G,MAAS,SAAAC,GAAU,IACfC,EAAsBD,EAAtBC,QAASC,EAAaF,EAAbE,SAEjB,OACE,4BAAQC,UAAU,UACfF,GAAW,yBAAKG,OAAO,KAAKC,IAAKC,IAAQC,IAAI,YAC9C,0BAAMJ,UAAWF,EAAU,YAAc,IAAKC,MAMpDH,EAAOS,aAjBc,CACnBP,SAAS,EACTC,cAAUO,GAiBGV,Q,MCdAW,MAVf,SAAqBV,GAAQ,IACnBC,EAAYD,EAAZC,QACR,OACE,yBAAKE,UAAU,gBACb,kBAAC,IAAD,CAAOQ,KAAK,OAAOC,YAAY,uBAAuBC,KAAK,UAC3D,kBAAC,EAAD,CAAQZ,QAASA,GAAjB,YCMSa,MAZf,SAAoBd,GAAQ,IAClBe,EAAsBf,EAAtBe,SAAUd,EAAYD,EAAZC,QAElB,OACE,kBAAC,IAAD,CAAQc,SAAUA,EAAUC,cAAe,CAAEC,MAAO,KAClD,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAahB,QAASA,OCUfiB,G,MAZD,SAAAlB,GAAU,IACdE,EAAaF,EAAbE,SAER,OACE,yBAAKC,UAAU,cACb,4BAAKD,M,yBCeIiB,G,MAnBE,SAAAnB,GAAU,IACjBE,EAAgDF,EAAhDE,SAAUkB,EAAsCpB,EAAtCoB,SAAUC,EAA4BrB,EAA5BqB,SAAaC,EADjB,YACgCtB,EADhC,oCAGxB,OACE,yCACMsB,EADN,CAEEnB,UAAWoB,IACT,YACAH,GAAY,YACZC,GAAY,cAGbnB,K,uCCsCQsB,E,WA1Db,WAAYC,GAAS,oBACnBC,KAAKC,OAAS,mBACdD,KAAKE,QAAUH,EAAOG,QACtBF,KAAKG,MAAQ,G,yMAGHC,G,kFACNJ,KAAKG,MAAMC,G,yCACNJ,KAAKG,MAAMC,I,cAGdC,EAAa,IAAIC,IAAIF,EAAKJ,KAAKE,SAErCF,KAAKG,MAAMC,GAAOG,MAAMF,EAAWG,MAChCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,WACL,EAAKT,MAAMC,QAAOrB,K,kBAGfiB,KAAKG,MAAMC,I,iLAGJS,G,qGACPC,QAAQC,IAAIF,EAAOG,MAAMC,KAAI,SAAAC,GAAI,OAAI,EAAKX,MAAMW,OAAQT,MAC7D,SAAAU,GAAM,OACJA,EAAOC,MAAK,SAACC,EAAGC,GACd,OAAO,IAAIC,KAAKD,EAAEE,cAAgB,IAAID,KAAKF,EAAEG,qB,8KAKlCjC,G,gGACIS,KAAKO,MAAL,8BAAkChB,I,cAAjD4B,E,gBACeL,QAAQC,IAC3BI,EAAOM,QAAQR,IAAf,uCAAmB,WAAMJ,GAAN,iBAAAQ,EAAA,sEACO,EAAKd,MAAMM,EAAOa,WADzB,cACXA,EADW,gBAGKZ,QAAQC,IAC5BF,EAAOc,QAAQV,IAAf,uCAAmB,WAAMW,GAAN,SAAAP,EAAA,+EACV,EAAKd,MAAMqB,IADD,2CAAnB,wDAJe,cAGXD,EAHW,yBASV,CACLE,GAAIhB,EAAOT,IACXA,IAAKS,EAAOT,IACZjB,KAAM0B,EAAO1B,KACb6B,MAAOH,EAAOG,MACdW,UACAD,cAfe,2CAAnB,wD,cADII,E,yBAqBCA,G,8GCnDEC,EAAaC,IAAMC,gBAM1BC,EAAS,IAAIpC,EAAU,CAC3BI,QAAS,yBASIiC,EANY,SAAC,GAAD,IAAG3D,EAAH,EAAGA,SAAH,OACzB,kBAACuD,EAAWK,SAAZ,CAAqBC,MAAOH,GAAS1D,I,ikBCbvC,IAAM8D,EACK,UADLA,EAEK,UAFLA,EAGG,QAGHC,EAAe,CACnBhE,SAAS,EACT4C,YAAQpC,EACRyD,WAAOzD,GAGH0D,EAAiB,SAACC,EAAOC,GAC7B,OAAQA,EAAO1D,MACb,KAAKqD,EACH,OAAO,EAAP,GACKI,EADL,CAEEnE,SAAS,EACT4C,YAAQpC,EACRyD,WAAOzD,IAEX,KAAKuD,EACH,OAAO,EAAP,GACKI,EADL,CAEEnE,SAAS,EACT4C,OAAQwB,EAAOxB,OACfqB,WAAOzD,IAEX,KAAKuD,EACH,OAAO,EAAP,GACKI,EADL,CAEEnE,SAAS,EACT4C,YAAQpC,EACRyD,MAAOG,EAAOH,QAElB,QACE,OAAOE,IAIPE,EAAU,CACd3D,KAAMqD,GAGFO,EAAe,SAAAL,GAAK,MAAK,CAC7BvD,KAAMqD,EACNE,UAGIM,EAAiB,SAAA3B,GAAM,MAAK,CAChClC,KAAMqD,EACNnB,WAGK,SAAS4B,EAAWC,EAAgBC,GAAU,IAAD,EACxBC,qBAAWT,EAAgBF,GADH,mBAC3CG,EAD2C,KACpCS,EADoC,KAiBlD,OAdAC,qBAAU,WACHH,EAAQI,OACXF,EAASP,GAETI,EAAeC,EAAQK,WACpB7C,MAAK,SAAAU,GACJgC,EAASL,EAAe3B,OAEzBP,OAAM,SAAA4B,GACLW,EAASN,EAAaL,UAG3B,CAACS,EAAQI,KAAMJ,EAAQK,UAAWN,IAE9BN,ECrET,IAQea,EARO,WACpB,OACE,kBAAC,EAAD,KACE,yBAAK5E,IAAKC,IAAQC,IAAI,cCSb2E,G,MARM,SAAAlF,GAAU,IACrBE,EAAaF,EAAbE,SAER,OAAO,yBAAKC,UAAU,iBAAiBD,KCsD1BiF,G,MAjDA,SAAAnF,GAAU,IACfuC,EAAWvC,EAAXuC,OAEFqB,EAASwB,qBAAW3B,GAHJ,EAMqBgB,EAF7BY,uBAAY,kBAAMzB,EAAO0B,UAAU/C,KAAS,CAACqB,EAAQrB,IAEN,CAC3DwC,MAAOxC,EACPyC,UAAWzC,IAFLtC,EANc,EAMdA,QAAiBsF,EANH,EAML1C,OAAgBqB,EANX,EAMWA,MAKjC,OACE,yBAAK/D,UAAU,SACZF,GAAW,kBAAC,EAAD,MACXiE,GAAS,kBAAC,EAAD,yCACRjE,IAAYiE,IAAUqB,GACtB,kBAAC,EAAD,qDAIDA,GACCA,EAAO5C,KAAI,SAAA6C,GAAK,OACd,kBAAC,EAAD,CAAUC,IAAKD,EAAM1D,IAAKV,UAAQ,GAChC,6BACE,6BACE,yBAAKjB,UAAU,mBAAf,SACA,6BAAMqF,EAAME,SAGhB,6BACE,6BACE,yBAAKvF,UAAU,mBAAf,WACA,6BAAMqF,EAAMtC,gBAGhB,yBAAKyC,MAAO,CAAEC,SAAU,IACtB,6BACE,yBAAKzF,UAAU,mBAAf,WACA,6BAAMqF,EAAMK,cAAcC,UAAU,EAAG,KAAvC,gBCrCVtF,EAAe,CACnBuF,MAAO,GACP7B,WAAOzD,GAGT,SAASuF,EAAahG,GAAQ,IACpB+F,EAA0B/F,EAA1B+F,MAAO9F,EAAmBD,EAAnBC,QAASiE,EAAUlE,EAAVkE,MADG,EAEiB+B,wBAASxF,GAF1B,mBAEpByF,EAFoB,KAEJC,EAFI,KAI3B,SAASC,EAAS/E,EAAUoE,GACP,qBAARA,GAA+B,UAARA,GAChCU,EAAkB9E,GAItB,OACE,oCACE,gDACCpB,GAAW,kBAAC,EAAD,MACXiE,GAAS,kBAAC,EAAD,yCACRjE,IAAYiE,IAAU6B,EAAMM,QAC5B,kBAAC,EAAD,yDAIDN,EAAMpD,KAAI,SAAA2D,GACT,IAAMC,EAAaL,GAAkBA,EAAe3C,KAAO+C,EAAK/C,GAChE,OACE,kBAAC,IAAMiD,SAAP,CAAgBf,IAAKa,EAAK/C,IACxB,kBAAC,EAAD,CACEkD,KAAK,SACLrF,SAAUmF,EACVlF,SAAUkF,EACVG,SAAS,IACTC,QAAS,kBAAMP,EAASE,IACxBM,WAAY,SAAAC,GACVT,EAASE,EAAMO,EAAEpB,OAGnB,yBAAKtF,UAAU,iBAAiBwF,MAAO,CAAEC,SAAU,IACjD,6BACE,yBAAKzF,UAAU,mBAAf,QACA,6BAAMmG,EAAKzF,QAGf,yBAAKV,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mBAAf,SACA,6BAAMmG,EAAKlD,UAAUvC,OAGvB,yBAAKV,UAAU,0BACb,yBAAKA,UAAU,mBAAf,WACA,6BAAMmG,EAAKjD,QAAQV,KAAI,SAAAW,GAAM,OAAIA,EAAOzC,QAAMiG,KAAK,OAGrD,yBAAK3G,UAAU,6BACb,yBAAKA,UAAU,mBAAf,cACA,6BAAMmG,EAAKlD,UAAU2D,eAI1BR,GAAc,kBAAC,EAAD,CAAQhE,OAAQ2D,SAS3CF,EAAaxF,aAAeA,EAEbwF,Q,MChDAgB,MAjCf,WACE,IAAMpD,EAASwB,qBAAW3B,GADV,EAEUwC,wBAASxF,GAFnB,mBAETQ,EAFS,KAEFgG,EAFE,OASmBxC,EALlBY,uBAAY,kBAAMzB,EAAOsD,aAAajG,KAAQ,CAC7D2C,EACA3C,IAGsD,CACtD8D,MAAO9D,EACP+D,UAAW/D,IAFLhB,EATQ,EASRA,QAAS4C,EATD,EASCA,OAAQqB,EATT,EASSA,MASzB,OACE,yBAAK/D,UAAU,aACb,kBAAC,EAAD,yBACA,kBAAC,EAAD,CAAYF,QAASA,EAASc,SAPlC,SAAkBoG,GAChBF,EAASE,EAAOlG,UAObA,GACC,kBAAC,EAAD,CACEhB,QAASA,EACTiE,MAAOA,EACP6B,MAAOlD,MCvBFuE,MARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,Q,MCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b57c6bf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.65421bef.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport loader from \"../../loader.svg\";\nimport \"./index.css\";\n\nconst propTypes = {\n  loading: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\n\nconst defaultProps = {\n  loading: false,\n  children: undefined\n};\n\nconst Button = props => {\n  const { loading, children } = props;\n\n  return (\n    <button className=\"button\">\n      {loading && <img height=\"18\" src={loader} alt=\"loading\"></img>}\n      <span className={loading ? \"invisible\" : \"\"}>{children}</span>\n    </button>\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from \"react\";\nimport { Field } from \"formik\";\nimport Button from \"../Button\";\nimport \"./index.css\";\n\nfunction SearchField(props) {\n  const { loading } = props;\n  return (\n    <div className=\"search-field\">\n      <Field type=\"text\" placeholder=\"Search characters...\" name=\"query\" />\n      <Button loading={loading}>Search</Button>\n    </div>\n  );\n}\n\nexport default SearchField;\n","import React from \"react\";\nimport SearchField from \"../SearchField\";\nimport { Formik, Form } from \"formik\";\n\nfunction SearchForm(props) {\n  const { onSubmit, loading } = props;\n\n  return (\n    <Formik onSubmit={onSubmit} initialValues={{ query: \"\" }}>\n      <Form>\n        <SearchField loading={loading} />\n      </Form>\n    </Formik>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nconst propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst Title = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"page-title\">\n      <h1>{children}</h1>\n    </div>\n  );\n};\n\nTitle.propTypes = propTypes;\n\nexport default Title;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport \"./index.css\";\n\nconst propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst ListItem = props => {\n  const { children, noMargin, selected, ...attributes } = props;\n\n  return (\n    <div\n      {...attributes}\n      className={classnames(\n        \"list-item\",\n        noMargin && \"no-margin\",\n        selected && \"selected\"\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nListItem.propTypes = propTypes;\n\nexport default ListItem;\n","class APIClient {\n  constructor(config) {\n    this.accept = \"application/json\";\n    this.baseURL = config.baseURL;\n    this.cache = {};\n  }\n\n  async fetch(url) {\n    if (this.cache[url]) {\n      return this.cache[url];\n    }\n\n    const requestURL = new URL(url, this.baseURL);\n\n    this.cache[url] = fetch(requestURL.href)\n      .then(response => response.json())\n      .catch(() => {\n        this.cache[url] = undefined;\n      });\n\n    return this.cache[url];\n  }\n\n  async getMovies(person) {\n    return Promise.all(person.films.map(film => this.fetch(film))).then(\n      result =>\n        result.sort((a, b) => {\n          return new Date(b.release_date) - new Date(a.release_date);\n        })\n    );\n  }\n\n  async searchPeople(query) {\n    const result = await this.fetch(`/api/people/?search=${query}`);\n    const people = await Promise.all(\n      result.results.map(async person => {\n        const homeworld = await this.fetch(person.homeworld);\n\n        const species = await Promise.all(\n          person.species.map(async specie => {\n            return this.fetch(specie);\n          })\n        );\n\n        return {\n          id: person.url,\n          url: person.url,\n          name: person.name,\n          films: person.films,\n          species,\n          homeworld\n        };\n      })\n    );\n\n    return people;\n  }\n}\n\nexport default APIClient;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport APIClient from \"../api/client\";\n\nexport const APIContext = React.createContext();\n\nconst propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst client = new APIClient({\n  baseURL: \"https://swapi.co/api\"\n});\n\nconst APIContextProvider = ({ children }) => (\n  <APIContext.Provider value={client}>{children}</APIContext.Provider>\n);\n\nAPIContextProvider.propTypes = propTypes;\n\nexport default APIContextProvider;\n","import { useReducer, useEffect } from \"react\";\n\nconst CONSTANTS = {\n  REQUEST: \"REQUEST\",\n  SUCCESS: \"SUCCESS\",\n  ERROR: \"ERROR\"\n};\n\nconst initialState = {\n  loading: false,\n  result: undefined,\n  error: undefined\n};\n\nconst requestReducer = (state, action) => {\n  switch (action.type) {\n    case CONSTANTS.REQUEST:\n      return {\n        ...state,\n        loading: true,\n        result: undefined,\n        error: undefined\n      };\n    case CONSTANTS.SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        result: action.result,\n        error: undefined\n      };\n    case CONSTANTS.ERROR:\n      return {\n        ...state,\n        loading: false,\n        result: undefined,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nconst request = {\n  type: CONSTANTS.REQUEST\n};\n\nconst requestError = error => ({\n  type: CONSTANTS.ERROR,\n  error\n});\n\nconst requestSuccess = result => ({\n  type: CONSTANTS.SUCCESS,\n  result\n});\n\nexport function useRequest(promiseCreator, options) {\n  const [state, dispatch] = useReducer(requestReducer, initialState);\n\n  useEffect(() => {\n    if (!options.skip) {\n      dispatch(request);\n\n      promiseCreator(options.variables)\n        .then(result => {\n          dispatch(requestSuccess(result));\n        })\n        .catch(error => {\n          dispatch(requestError(error));\n        });\n    }\n  }, [options.skip, options.variables, promiseCreator]);\n\n  return state;\n}\n","import React from \"react\";\nimport loader from \"../../loader.svg\";\nimport ListItem from \"../ListItem\";\n\nconst ContentLoader = () => {\n  return (\n    <ListItem>\n      <img src={loader} alt=\"loading\"></img>\n    </ListItem>\n  );\n};\n\nexport default ContentLoader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nconst propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst ErrorMessage = props => {\n  const { children } = props;\n\n  return <div className=\"error-message\">{children}</div>;\n};\n\nErrorMessage.propTypes = propTypes;\n\nexport default ErrorMessage;\n","import React, { useContext, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { APIContext } from \"../../context/api\";\nimport { useRequest } from \"../../hooks/request\";\nimport ListItem from \"../ListItem\";\nimport ContentLoader from \"../ContentLoader\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport \"./index.css\";\n\nconst propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  }).isRequired\n};\n\nconst Movies = props => {\n  const { person } = props;\n\n  const client = useContext(APIContext);\n  const query = useCallback(() => client.getMovies(person), [client, person]);\n\n  const { loading, result: movies, error } = useRequest(query, {\n    skip: !person,\n    variables: person\n  });\n\n  return (\n    <div className=\"movie\">\n      {loading && <ContentLoader />}\n      {error && <ErrorMessage>Oops... Something went wrong...</ErrorMessage>}\n      {!loading && !error && !movies && (\n        <ErrorMessage>\n          These are not the movies you are looking for\n        </ErrorMessage>\n      )}\n      {movies &&\n        movies.map(movie => (\n          <ListItem key={movie.url} noMargin>\n            <div>\n              <div>\n                <div className=\"list-item-label\">Title</div>\n                <div>{movie.title}</div>\n              </div>\n            </div>\n            <div>\n              <div>\n                <div className=\"list-item-label\">Release</div>\n                <div>{movie.release_date}</div>\n              </div>\n            </div>\n            <div style={{ flexGrow: 5 }}>\n              <div>\n                <div className=\"list-item-label\">Opening</div>\n                <div>{movie.opening_crawl.substring(0, 150)}...</div>\n              </div>\n            </div>\n          </ListItem>\n        ))}\n    </div>\n  );\n};\n\nMovies.propTypes = propTypes;\n\nexport default Movies;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItem from \"../ListItem\";\nimport Movies from \"../Movies\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport ContentLoader from \"../ContentLoader\";\n\nconst propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired\n    })\n  )\n};\n\nconst defaultProps = {\n  items: [],\n  error: undefined\n};\n\nfunction SearchResult(props) {\n  const { items, loading, error } = props;\n  const [selectedPerson, setSelectedPerson] = useState(undefined);\n\n  function onSelect(selected, key) {\n    if (typeof key === \"undefined\" || key === \"Enter\") {\n      setSelectedPerson(selected);\n    }\n  }\n\n  return (\n    <>\n      <h2>Found characters</h2>\n      {loading && <ContentLoader />}\n      {error && <ErrorMessage>Oops... Something went wrong...</ErrorMessage>}\n      {!loading && !error && !items.length && (\n        <ErrorMessage>\n          These are not the characters you are looking for\n        </ErrorMessage>\n      )}\n      {items.map(item => {\n        const isSelected = selectedPerson && selectedPerson.id === item.id;\n        return (\n          <React.Fragment key={item.id}>\n            <ListItem\n              role=\"button\"\n              noMargin={isSelected}\n              selected={isSelected}\n              tabIndex=\"0\"\n              onClick={() => onSelect(item)}\n              onKeyPress={e => {\n                onSelect(item, e.key);\n              }}\n            >\n              <div className=\"list-item-name\" style={{ flexGrow: 2 }}>\n                <div>\n                  <div className=\"list-item-label\">Name</div>\n                  <div>{item.name}</div>\n                </div>\n              </div>\n              <div className=\"list-item-meta\">\n                <div className=\"list-item-home-name\">\n                  <div className=\"list-item-label\">World</div>\n                  <div>{item.homeworld.name}</div>\n                </div>\n\n                <div className=\"list-item-home-species\">\n                  <div className=\"list-item-label\">Species</div>\n                  <div>{item.species.map(specie => specie.name).join(\",\")}</div>\n                </div>\n\n                <div className=\"list-item-home-population\">\n                  <div className=\"list-item-label\">Population</div>\n                  <div>{item.homeworld.population}</div>\n                </div>\n              </div>\n            </ListItem>\n            {isSelected && <Movies person={selectedPerson}></Movies>}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n\nSearchResult.propTypes = propTypes;\nSearchResult.defaultProps = defaultProps;\n\nexport default SearchResult;\n","import React, { useState, useContext, useCallback } from \"react\";\nimport SearchForm from \"../../components/SearchForm\";\nimport Title from \"../../components/Title\";\nimport SearchResult from \"../../components/SearchResult\";\nimport { APIContext } from \"../../context/api\";\nimport { useRequest } from \"../../hooks/request\";\n\nimport \"./index.css\";\n\nfunction Search() {\n  const client = useContext(APIContext);\n  const [query, setQuery] = useState(undefined);\n\n  const APIQuery = useCallback(() => client.searchPeople(query), [\n    client,\n    query\n  ]);\n\n  const { loading, result, error } = useRequest(APIQuery, {\n    skip: !query,\n    variables: query\n  });\n\n  function onSubmit(values) {\n    setQuery(values.query);\n  }\n\n  return (\n    <div className=\"container\">\n      <Title>CHARACTER SEARCH</Title>\n      <SearchForm loading={loading} onSubmit={onSubmit}></SearchForm>\n      {query && (\n        <SearchResult\n          loading={loading}\n          error={error}\n          items={result}\n        ></SearchResult>\n      )}\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport Search from \"./feature/Search\";\nimport APIContextProvider from \"./context/api\";\n\nfunction App() {\n  return (\n    <APIContextProvider>\n      <Search />\n    </APIContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}